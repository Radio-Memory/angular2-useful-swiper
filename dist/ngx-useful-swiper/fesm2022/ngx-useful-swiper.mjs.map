{"version":3,"file":"ngx-useful-swiper.mjs","sources":["../../../projects/ngx-useful-swiper/src/lib/swiper/swiper.component.ts","../../../projects/ngx-useful-swiper/src/lib/swiper/swiper.component.html","../../../projects/ngx-useful-swiper/src/lib/ngx-useful-swiper.module.ts","../../../projects/ngx-useful-swiper/src/public-api.ts","../../../projects/ngx-useful-swiper/src/ngx-useful-swiper.ts"],"sourcesContent":["import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport Swiper, { SwiperOptions } from 'swiper/bundle';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'swiper',\n  templateUrl: './swiper.component.html',\n  styleUrls: ['./swiper.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwiperComponent\n  implements AfterViewChecked, AfterViewInit, OnDestroy {\n  // add all the options as optional settings and use them to create an options object\n  @Input() config: SwiperOptions;\n  @Input('initialize') set initialize(value: boolean) {\n    this.shouldInitialize = this.initialized ? false : value;\n  }\n\n  swiper: Swiper;\n\n  private swiperWrapper: any;\n  private slideCount = 0;\n  private initialized = false;\n  private shouldInitialize = true;\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.shouldInitialize) {\n      this.setup();\n    }\n  }\n\n  setup() {\n    if (!this.swiper) {\n      // if rendered on server querySelector is undefined\n      if (this.elementRef.nativeElement.querySelector) {\n        this.swiperWrapper = this.elementRef.nativeElement.querySelector(\n          '.swiper-wrapper'\n        );\n        this.slideCount = this.swiperWrapper.childElementCount;\n        this.swiper = new Swiper(\n          this.elementRef.nativeElement.querySelector('swiper > div'),\n          this.config\n        );\n        this.changeDetectorRef.detectChanges();\n      }\n\n      this.shouldInitialize = false;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldInitialize) {\n      this.setup();\n    }\n\n    if (\n      this.swiperWrapper &&\n      this.slideCount !== this.swiperWrapper.childElementCount\n    ) {\n      this.slideCount = this.swiperWrapper.childElementCount;\n      this.swiper.update();\n    }\n  }\n\n  ngOnDestroy() {\n    this.swiper.destroy(true, true);\n  }\n}\n","<div\n  [ngClass]=\"{\n    'swiper-container': config?.containerModifierClass === undefined\n  }\"\n>\n  <ng-content></ng-content>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SwiperComponent } from './swiper/swiper.component';\n\n@NgModule({\n  declarations: [SwiperComponent],\n  imports: [CommonModule],\n  exports: [SwiperComponent]\n})\nexport class NgxUsefulSwiperModule {}\n","/*\n * Public API Surface of ngx-useful-swiper\n */\n\nexport * from './lib/ngx-useful-swiper.module';\nexport * from './lib/swiper/swiper.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}